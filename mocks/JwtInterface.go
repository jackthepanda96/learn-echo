// Code generated by mockery v2.42.1. DO NOT EDIT.

package mocks

import (
	jwt "github.com/golang-jwt/jwt/v5"

	mock "github.com/stretchr/testify/mock"
)

// JwtInterface is an autogenerated mock type for the JwtInterface type
type JwtInterface struct {
	mock.Mock
}

// DecodeToken provides a mock function with given fields: token
func (_m *JwtInterface) DecodeToken(token *jwt.Token) string {
	ret := _m.Called(token)

	if len(ret) == 0 {
		panic("no return value specified for DecodeToken")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func(*jwt.Token) string); ok {
		r0 = rf(token)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GenerateJWT provides a mock function with given fields: hp
func (_m *JwtInterface) GenerateJWT(hp string) (string, error) {
	ret := _m.Called(hp)

	if len(ret) == 0 {
		panic("no return value specified for GenerateJWT")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (string, error)); ok {
		return rf(hp)
	}
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(hp)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(hp)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewJwtInterface creates a new instance of JwtInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewJwtInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *JwtInterface {
	mock := &JwtInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
