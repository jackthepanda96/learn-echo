// Code generated by mockery v2.42.1. DO NOT EDIT.

package mocks

import (
	jwt "github.com/golang-jwt/jwt/v5"
	mock "github.com/stretchr/testify/mock"

	todo "21-api/features/todo"
)

// TodoService is an autogenerated mock type for the TodoService type
type TodoService struct {
	mock.Mock
}

// AddTodo provides a mock function with given fields: pemilik, kegiatanBaru
func (_m *TodoService) AddTodo(pemilik *jwt.Token, kegiatanBaru todo.Todo) (todo.Todo, error) {
	ret := _m.Called(pemilik, kegiatanBaru)

	if len(ret) == 0 {
		panic("no return value specified for AddTodo")
	}

	var r0 todo.Todo
	var r1 error
	if rf, ok := ret.Get(0).(func(*jwt.Token, todo.Todo) (todo.Todo, error)); ok {
		return rf(pemilik, kegiatanBaru)
	}
	if rf, ok := ret.Get(0).(func(*jwt.Token, todo.Todo) todo.Todo); ok {
		r0 = rf(pemilik, kegiatanBaru)
	} else {
		r0 = ret.Get(0).(todo.Todo)
	}

	if rf, ok := ret.Get(1).(func(*jwt.Token, todo.Todo) error); ok {
		r1 = rf(pemilik, kegiatanBaru)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewTodoService creates a new instance of TodoService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTodoService(t interface {
	mock.TestingT
	Cleanup(func())
}) *TodoService {
	mock := &TodoService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
